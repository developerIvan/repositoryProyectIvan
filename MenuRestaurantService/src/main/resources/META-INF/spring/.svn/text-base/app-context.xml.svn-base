<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">


	<jdbc:embedded-database id="dataSource" type="H2">
       <jdbc:script location="classpath:sql/restaurantH2Script.sql"/>
    </jdbc:embedded-database>
	
	
	<!--Crea los objetos y los administra para su dependencia -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="ji.restaurant.menu.persistence" />
		<property name="hibernateProperties">
			<props>
			  <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
               
			</props>
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean class=
	  "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	 <!--<end id="bean_exception_translation_post_processor" />-->

     <!-- Permite que los beans sean los limites de las transacciones para poder adminsitrarlas mejor -->
	 <bean id="transactionManager" 
	      class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	    <property name="sessionFactory" ref="sessionFactory" />
	    <property name="dataSource" ref="dataSource" />
	  </bean>


	
	<context:component-scan base-package="ji.restaurant.menu" />
 
	<!--  beans for preloading data  -->
		<bean class="org.springframework.jdbc.datasource.init.DataSourceInitializer"
		depends-on="sessionFactory">
		<property name="databasePopulator" ref="resourceDatabasePopulator" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="resourceDatabasePopulator"
		class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
		<property name="scripts">
			<array>
				<value>classpath:sql/db-test-data.sql</value>
			</array>
		</property>
	</bean>
	
	
</beans>
